{"version":3,"sources":["algorithms/bfs.js","Pathfinder/Pathfinder.jsx","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Node","prev","i","j","this","Pair","BFS","iLength","jLength","starti","startj","endi","endj","walls","searched","newgrid","createGrid","length","startCoords","endCoords","nodesToProcess","push","currentCoords","shift","getNeighbours","forEach","x","path","endNode","currentNodeCord","neighbours","top","isValid","right","bottom","left","y","grid","row","currentRow","col","GRID_LENGTH","Pathfinder","props","state","Map","running","terminate","setup","wallselection","beginselection","endselection","startnode","endnode","trigger","refresh","window","addEventListener","event","preventDefault","setState","M","elems","document","querySelectorAll","Modal","init","openModal","elem","getElementById","getInstance","open","getElementsByClassName","classList","remove","style","backgroundColor","border","delay","Array","from","values","result","index","coordMap","add","id","clickSwitchColor","tempSet","delete","tuple","idToCoords","set","start","newStart","end","newEnd","btnid","onMouseEnter","dragSwitchColor","onClick","className","position","padding","margin","href","color","class","textAlign","bfs","startSelectionTrigger","endSelectionTrigger","wallSelectionTrigger","fontFamily","fontSize","React","Component","Math","floor","n","Promise","done","setTimeout","Navbar","paddingTop","paddingBottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52f724f0.chunk.js","sourcesContent":["\r\nclass Node {\r\n    constructor(prev, i, j) {\r\n        this.prev = prev;\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n}\r\n\r\nclass Pair {\r\n    constructor(i, j) {\r\n        this.i = i;\r\n        this.j = j;\r\n    }\r\n}\r\n\r\n\r\nexport const BFS = (iLength, jLength, starti, startj, endi, endj, walls) => {\r\n\r\n    \r\n\r\n    const searched = [];\r\n\r\n    let newgrid = createGrid(iLength,jLength);\r\n    // Setup walls\r\n    for (let i = 1; i < walls.length; i++) {\r\n        newgrid[walls[i][0]][walls[i][1]] = new Node(null,walls[i][0], walls[i][1]);\r\n    }\r\n    \r\n    let startCoords = new Pair(starti,startj);\r\n\r\n    let endCoords = new Pair(endi,endj);\r\n    \r\n    let nodesToProcess = [];\r\n    \r\n    nodesToProcess.push(startCoords);\r\n    \r\n    newgrid[startCoords.i][startCoords.j] = new Node(null, startCoords.i, startCoords.j);\r\n    // newgrid[endi - 1][endj] = new Node(null, startCoords.i, startCoords.j);\r\n    // newgrid[endi - 1][endj - 1] = new Node(null, startCoords.i, startCoords.j);\r\n\r\n    let currentCoords = new Pair();\r\n    while (!(currentCoords.i === endCoords.i && currentCoords.j === endCoords.j) && nodesToProcess.length !== 0) {\r\n    \r\n        \r\n        currentCoords = nodesToProcess.shift();\r\n        searched.push(currentCoords);\r\n        \r\n        let neighbours = [];\r\n        neighbours = getNeighbours(currentCoords, newgrid);\r\n        \r\n        neighbours.forEach(x => nodesToProcess.push(x));\r\n        \r\n\r\n    }\r\n    let path = [];\r\n    if (currentCoords.i === endCoords.i && currentCoords.j === endCoords.j) {\r\n        \r\n        let endNode = newgrid[currentCoords.i][currentCoords.j];\r\n        while (endNode != null) {\r\n            path.push(endNode);\r\n            endNode = endNode.prev;\r\n        }\r\n    }\r\n    \r\n    // console.log(path);\r\n    return [path, searched];\r\n }\r\n \r\nexport const getNeighbours = (currentNodeCord, newgrid) => {\r\n\r\n    let neighbours = [];\r\n    let i = currentNodeCord.i;\r\n    let j = currentNodeCord.j;\r\n\r\n    // top\r\n    let top = new Pair(i-1, j);\r\n    if (isValid(newgrid, top.i, top.j)) {\r\n        neighbours.push(top);\r\n        newgrid[top.i][top.j] = new Node(newgrid[i][j],top.i, top.j);\r\n    }\r\n    // right\r\n    let right = new Pair(i, j+1);\r\n    if (isValid(newgrid, right.i, right.j)) {\r\n        neighbours.push(right);\r\n        newgrid[right.i][right.j] = new Node(newgrid[i][j], right.i, right.j);\r\n    }\r\n    // bottom\r\n    let bottom = new Pair(i+1, j);\r\n    if (isValid(newgrid, bottom.i, bottom.j)) {\r\n        neighbours.push(bottom);\r\n        newgrid[bottom.i][bottom.j] = new Node(newgrid[i][j], bottom.i, bottom.j);\r\n    }\r\n    // left\r\n    let left = new Pair(i, j - 1);\r\n    if (isValid(newgrid, left.i, left.j)) {\r\n        neighbours.push(left);\r\n        newgrid[left.i][left.j] = new Node(newgrid[i][j], left.i, left.j);\r\n        \r\n    }\r\n    return neighbours;\r\n}\r\n\r\nexport const isValid = (newgrid, x, y) => {\r\n\r\n    if (x < 0 || x >= newgrid.length ) return false;\r\n    if (y < 0 || y >= newgrid[0].length ) return false;\r\n    if (newgrid[x][y] != null) return false;\r\n    return true;\r\n}\r\n\r\nexport const createGrid = (iLength, jLength) => {\r\n    const grid = [];\r\n    for (let row = 0; row < iLength; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < jLength; col++) {\r\n            currentRow.push(null);\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}","import React from \"react\";\r\nimport { BFS } from \"../algorithms/bfs.js\";\r\n\r\nimport \"./pathfinder.css\";\r\n\r\nconst GRID_WIDTH = 30;\r\nconst GRID_LENGTH = 45;\r\n\r\nexport default class Pathfinder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            \r\n            walls: new Map(),\r\n            running: false,\r\n            terminate: true,\r\n            setup: false,\r\n            wallselection: false,\r\n            beginselection: false,\r\n            endselection: false,\r\n            startnode: [],\r\n            endnode: [],\r\n            trigger: false,\r\n        \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n        \r\n        \r\n            window.addEventListener(\"mousedown\", (event) => {\r\n                event.preventDefault();\r\n                this.setState({trigger: true}); \r\n            });\r\n          \r\n            window.addEventListener('mouseup', (event) => {\r\n                this.setState({trigger: false});\r\n            });\r\n            const M = window.M;\r\n            var elems = document.querySelectorAll('.modal');\r\n            M.Modal.init(elems, []);\r\n\r\n            this.openModal();\r\n          \r\n        \r\n    }\r\n\r\n    openModal() {\r\n        const M = window.M;\r\n        let elem = document.getElementById(\"modal1\");\r\n        var instance = M.Modal.getInstance(elem);\r\n        instance.open();\r\n    }\r\n\r\n    refresh() {\r\n        \r\n        this.setState({terminate: true, running: false, walls: [[]], setup: false, startnode: [], endnode: []});\r\n\r\n        const elem = document.getElementsByClassName(\"node\");\r\n        for (let i = 0; i < elem.length; i++) {\r\n            elem[i].classList.remove(\"slow-color\");\r\n            elem[i].style.backgroundColor = \"white\";\r\n            elem[i].style.border = \"0.1vw solid lightblue\";\r\n        }\r\n    }\r\n\r\n    async bfs() {\r\n        if(this.state.startnode.length !== 0 && this.state.endnode.length !== 0) {\r\n            this.setState({setup: true});\r\n        }\r\n        await delay(1);\r\n        if(this.state.running === false && this.state.setup === true) {\r\n            this.setState({running:true});\r\n            this.setState({terminate:false});\r\n            await delay(1);\r\n            const elems = document.getElementsByClassName(\"node\");\r\n            const walls = Array.from(this.state.walls.values());\r\n            const result = BFS(GRID_WIDTH, GRID_LENGTH, this.state.startnode[0], this.state.startnode[1], this.state.endnode[0], this.state.endnode[1], walls);\r\n            const path = result[0];\r\n            const searched = result[1];\r\n            for (let i = 1; i < searched.length - 1; i++) {\r\n                if(this.state.terminate === true) {\r\n                    return;\r\n                }\r\n                let index = coordMap(searched[i].i, searched[i].j, GRID_LENGTH);\r\n                elems[index].classList.add(\"slow-color\");\r\n                await delay(5);\r\n            }\r\n            \r\n            \r\n            await delay(1);\r\n            for (let i = 1; i < path.length - 1; i++) {\r\n                if(this.state.terminate === true) {\r\n                    return;\r\n                }\r\n                let index = coordMap(path[i].i, path[i].j, GRID_LENGTH);\r\n                elems[index].classList.remove(\"slow-color\");\r\n                elems[index].style.backgroundColor = \"yellow\";\r\n                await delay(10);\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    dragSwitchColor(id) {\r\n        if(this.state.trigger === true) {\r\n            this.clickSwitchColor(id);\r\n        }\r\n    }\r\n\r\n    async clickSwitchColor(id) {\r\n        if (this.state.running === false) {\r\n            let elem = document.getElementById(id);\r\n            var tempSet = new Map(this.state.walls);\r\n\r\n            //If we are selecting walls\r\n            if(this.state.wallselection === true) {\r\n                // disable wall\r\n                if (elem.style.backgroundColor === \"black\"){\r\n                    elem.style.backgroundColor = \"white\";\r\n                    tempSet.delete(id);\r\n                    \r\n                }\r\n                // enable wall\r\n                else if (elem.style.backgroundColor === \"white\") {\r\n                    elem.style.backgroundColor = \"black\";\r\n                    const tuple = idToCoords(id);\r\n                    tempSet.set(id,[tuple[0],tuple[1]]);\r\n                    \r\n                }\r\n                this.setState({walls: tempSet});\r\n                await delay(1);\r\n                \r\n            }\r\n\r\n            //If we are selecting the start node\r\n            if(this.state.beginselection === true) {\r\n                const start = this.state.startnode;\r\n                \r\n                if (start.length !== 0) {\r\n                    let currentStart = document.getElementById(coordMap(start[0],start[1]));\r\n                    currentStart.style.backgroundColor = \"white\";\r\n                }\r\n                elem.style.backgroundColor = \"green\";\r\n                    let newStart = idToCoords(id);\r\n                    this.setState({startnode: newStart});\r\n            }\r\n\r\n            //If we are selecting the end node\r\n            if(this.state.endselection === true) {\r\n                const end = this.state.endnode;\r\n                \r\n                if (end.length !== 0) {\r\n                    let currentEnd = document.getElementById(coordMap(end[0],end[1]));\r\n                    currentEnd.style.backgroundColor = \"white\";\r\n                }\r\n                elem.style.backgroundColor = \"red\";\r\n                    let newEnd = idToCoords(id);\r\n                    this.setState({endnode: newEnd});\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    wallSelectionTrigger(btnid){\r\n        document.getElementById(\"startbtn\").style.backgroundColor = \"rgb(55,181,255)\";\r\n        document.getElementById(\"endbtn\").style.backgroundColor = \"rgb(55,181,255)\";\r\n        this.setState({beginselection: false, endselection: false});\r\n        let elem = document.getElementById(btnid);\r\n        if(this.state.wallselection === false) {\r\n            this.setState({wallselection: true});\r\n            elem.style.backgroundColor = \"orange\";\r\n        }\r\n        else {\r\n            this.setState({wallselection: false});\r\n            elem.style.backgroundColor = \"rgb(55,181,255)\";\r\n        }\r\n    }\r\n\r\n    startSelectionTrigger(btnid){\r\n        document.getElementById(\"wallbtn\").style.backgroundColor = \"rgb(55,181,255)\";\r\n        document.getElementById(\"endbtn\").style.backgroundColor = \"rgb(55,181,255)\";\r\n        this.setState({wallselection: false, endselection: false});\r\n        let elem = document.getElementById(btnid);\r\n        if(this.state.beginselection === false) {\r\n            this.setState({beginselection: true});\r\n            elem.style.backgroundColor = \"orange\";\r\n        }\r\n        else {\r\n            this.setState({beginselection: false});\r\n            elem.style.backgroundColor = \"rgb(55,181,255)\";\r\n        }\r\n    }\r\n\r\n    endSelectionTrigger(btnid){\r\n        document.getElementById(\"startbtn\").style.backgroundColor = \"rgb(55,181,255)\";\r\n        document.getElementById(\"wallbtn\").style.backgroundColor = \"rgb(55,181,255)\";\r\n        this.setState({beginselection: false, wallselection: false});\r\n        let elem = document.getElementById(btnid);\r\n        if(this.state.endselection === false) {\r\n            this.setState({endselection: true});\r\n            elem.style.backgroundColor = \"orange\";\r\n        }\r\n        else {\r\n            this.setState({endselection: false});\r\n            elem.style.backgroundColor = \"rgb(55,181,255)\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const grid = [];\r\n        let numberOfNodes = GRID_LENGTH*GRID_WIDTH;\r\n        for (let i = 0; i < numberOfNodes; i++) {\r\n            grid.push(<div onMouseEnter={() => this.dragSwitchColor(i)} onClick={() => this.clickSwitchColor(i)} className=\"node\" key={i} id={i}></div>);\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"back-btn\" style={{position: \"absolute\", padding: 0, margin: 0}}>\r\n                <a href=\"https://projectaki.github.io/portfolio_akos_madarasz/#/Projects\" style={{color: \"black\"}} >\r\n                    <i class=\"fas fa-arrow-left fa-2x\"></i>\r\n                </a>\r\n            </div>\r\n                    <div style={{textAlign: \"center\"}}>\r\n                        <button id=\"bfsbtn\" className=\"actionbutton\" style={{backgroundColor: \"rgb(55,181,255)\"}} onClick={() => this.bfs()}>SEARCH</button>\r\n                        <button id=\"refreshbtn\" className=\"actionbutton\" style={{backgroundColor: \"rgb(55,181,255)\"}} onClick={() => this.refresh()}>REFRESH</button>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid-container rotate-on-small\">\r\n                                {grid}\r\n                    </div>\r\n                    \r\n\r\n                        <div style={{textAlign: \"center\"}}>\r\n                            \r\n                            <button id=\"startbtn\" className=\"actionbutton\" style={{backgroundColor: \"rgb(55,181,255)\"}} onClick={() => this.startSelectionTrigger(\"startbtn\")}>STARTNODE</button>\r\n                            <button id=\"endbtn\" className=\"actionbutton\" style={{backgroundColor: \"rgb(55,181,255)\"}} onClick={() => this.endSelectionTrigger(\"endbtn\")}>ENDNODE</button>\r\n                            <button id=\"wallbtn\" className=\"actionbutton\" style={{backgroundColor: \"rgb(55,181,255)\"}} onClick={() => this.wallSelectionTrigger(\"wallbtn\")}>ADD WALLS</button>\r\n                            \r\n                            \r\n                            <button id=\"\" className=\"actionbutton\" style={{backgroundColor: \"#CB2375\"}} onClick={() => this.openModal()}>INFO</button>\r\n                        </div>\r\n                    \r\n                    \r\n                    \r\n               \r\n                \r\n                \r\n                    \r\n                        \r\n                    \r\n                \r\n                <div id=\"modal1\" class=\"modal\">\r\n                    <div class=\"modal-content\">\r\n                    <h4 style={{fontFamily: \"League Spartan\", fontSize: \"2vmin\"}}>How to use</h4>\r\n                    <p style={{fontFamily: \"Alegreya sans\", fontSize: \"2vmin\"}}>While one of the 3 types of objects are selected (STARTNODE, ENDNODE or WALLS) you can place them on the grid by clicking or dragging! Once the field is set up\r\n                        click \"SEARCH\" to find the shortest path.\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            \r\n\r\n            \r\n                \r\n                \r\n            </>\r\n            \r\n        )\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\nfunction coordMap(i , j) {\r\n    return i * GRID_LENGTH + j;\r\n}\r\n\r\nfunction idToCoords(id) {\r\n    let i = Math.floor(id/GRID_LENGTH);\r\n    let j = id % GRID_LENGTH;\r\n    return [i,j];\r\n}\r\n\r\nfunction delay(n) {  \r\n    n = n || 2000;\r\n    return new Promise(done => {\r\n      setTimeout(() => {\r\n        done();\r\n      }, n);\r\n    });\r\n  }\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n\r\n    \r\n    render() {\r\n        return (\r\n            \r\n                <div className=\"navbar\">\r\n                        <h1 style={{margin: 0, fontSize: \"3vmin\", paddingTop: \"2vmin\", paddingBottom: \"2vmin\", fontFamily: \"League Spartan\"}}>Pathfinder</h1>\r\n                </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import Pathfinder from \"./Pathfinder/Pathfinder.jsx\"\nimport Navbar from './components/Navbar'\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Pathfinder/>\n    </>\n    \n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}